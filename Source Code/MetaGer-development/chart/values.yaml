# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: IfNotPresent
  fpm:
    repository: registry.metager.de/open-source/metager/fpm
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  nginx:
    repository: registry.metager.de/open-source/metager/nginx
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  redis:
    repository: registry.metager.de/open-source/metager/redis
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/tls-acme: "false"
    nginx.ingress.kubernetes.io/configuration-snippet: >
      if ($arg_out = "results-with-style") {
        more_set_headers "X-Frame-Options: allow-from https://scripts.zdv.uni-mainz.de/";
      }
      if ($host = "www.metager.de") {
          return 301 https://metager.de$request_uri;
      }
      if ($host = "www.metager.org") {
          return 301 https://metager.org$request_uri;
      }
      if ($host = "metager.es") {
          return 301 https://metager.org/es-ES$request_uri;
      }
      if ($host = "www.metager.es") {
          return 301 https://metager.org/es-ES$request_uri;
      }
      if ($host = "metager.nl") {
          return 301 https://metager.org/nl-NL$request_uri;
      }
      if ($host = "www.metager.nl") {
          return 301 https://metager.org/nl-NL$request_uri;
      }
      if ($host = "metager.co.uk") {
          return 301 https://metager.org/en-GB$request_uri;
      }
      if ($host = "www.metager.co.uk") {
          return 301 https://metager.org/en-GB$request_uri;
      }
      if ($host = "www.metager3.de") {
          return 301 https://metager3.de$request_uri;
      }

    nginx.ingress.kubernetes.io/client-body-buffer-size: 30m
    nginx.ingress.kubernetes.io/client-header-buffer-size: 256k
    nginx.ingress.kubernetes.io/proxy-body-size: 30m
    nginx.ingress.kubernetes.io/proxy-buffer-size: 256k
    nginx.ingress.kubernetes.io/proxy-buffers: 32 256k
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 256k;
      large_client_header_buffers 32 256k;
  hosts: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  #targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
